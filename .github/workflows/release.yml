name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## 更新日志 / Changelog

          ### 新功能 / New Features
          - 请查看提交历史 / Please check commit history

          ### 修复 / Fixes
          - 请查看提交历史 / Please check commit history

          ### 安装 / Installation

          使用 GitHub Action / Use as GitHub Action:
          ```yaml
          uses: Disdjj/reviewer@${{ github.ref_name }}
          ```

          使用 Docker / Use with Docker:
          ```bash
          docker pull ghcr.io/disdjj/reviewer:${{ github.ref_name }}
          ```
        draft: true
        prerelease: false

    - name: Upload Python Package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/reviewer-*.whl
        asset_name: reviewer-${{ github.ref_name }}.whl
        asset_content_type: application/zip

    # Optional: Publish to PyPI
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*
